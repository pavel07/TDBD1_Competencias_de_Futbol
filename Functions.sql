/*============================================= FUNCIONES DE SELECCION =========================================*/

CREATE TYPE T_PAIS_ROW AS OBJECT
(
  ID_PAIS INTEGER, 
  NOMBRE VARCHAR2(100), 
  NACIONALIDAD VARCHAR2(100)
);

CREATE OR REPLACE TYPE T_PAIS_TABLE AS TABLE OF T_PAIS_ROW;

CREATE OR REPLACE FUNCTION FN_PAIS_SELECT(pNOMBRE PAIS.NOMBRE%TYPE) RETURN  T_PAIS_TABLE PIPELINED AS
  CURSOR cPAIS IS
  SELECT ID_PAIS, NOMBRE, NACIONALIDAD 
  FROM PAIS 
  WHERE NOMBRE LIKE pNOMBRE;  
BEGIN
  FOR reg in cPAIS LOOP
    PIPE ROW(T_PAIS_ROW(reg.ID_PAIS, reg.NOMBRE, reg.NACIONALIDAD));
  END LOOP;
  RETURN;
END;

---------------------------------------------------------
CREATE TYPE T_CIUDAD_ROW AS OBJECT
(
  ID_CIUDAD INTEGER, 
  ID_PAIS INTEGER,
  NOMBRE VARCHAR2(100)
);

CREATE OR REPLACE TYPE T_CIUDAD_TABLE AS TABLE OF T_CIUDAD_ROW;

CREATE OR REPLACE FUNCTION FN_CIUDAD_SELECT(pNOMBRE CIUDAD.NOMBRE%TYPE) RETURN  T_CIUDAD_TABLE PIPELINED AS
  CURSOR cCIUDAD IS
  SELECT ID_CIUDAD,ID_PAIS,NOMBRE
  FROM CIUDAD
  WHERE NOMBRE LIKE pNOMBRE;  
BEGIN
  FOR reg in cCIUDAD LOOP
    PIPE ROW(T_CIUDAD_ROW(reg.ID_CIUDAD,reg.ID_PAIS,reg.NOMBRE));
  END LOOP;
  RETURN;
END;

---------------------------------------------------------
CREATE TYPE T_COMPETENCIA_ROW AS OBJECT
(
  ID_COMPETENCIA INTEGER,
  NOMBRE VARCHAR2(60),
  FECHA_INICIO DATE,
  FECHA_FIN DATE,
  ESTADO_ACTUAL INTEGER
);

CREATE OR REPLACE TYPE T_COMPETENCIA_TABLE AS TABLE OF T_COMPETENCIA_ROW;

CREATE OR REPLACE FUNCTION FN_COMPETENCIA_SELECT(pNOMBRE COMPETENCIA.NOMBRE%TYPE) RETURN  T_COMPETENCIA_TABLE PIPELINED AS
  CURSOR cCOMPETENCIA IS
  SELECT *
  FROM COMPETENCIA
  WHERE NOMBRE LIKE pNOMBRE;  
BEGIN
  FOR reg in cCOMPETENCIA LOOP
    PIPE ROW(T_COMPETENCIA_ROW(reg.ID_COMPETENCIA,reg.NOMBRE,reg.FECHA_INICIO,reg.FECHA_FIN,reg.ESTADO_ACTUAL));
  END LOOP;
  RETURN;
END;

---------------------------------------------------------
CREATE TYPE T_DESEMPENIO_DMD_ROW AS OBJECT
(
  ID_JUGADOR INTEGER,
  ID_RESULTADO INTEGER,
  VELOCIDAD INTEGER,
  CAPACIDAD_PASE INTEGER,
  CAPACIDAD_MARCA INTEGER,
  TIRO_GOL INTEGER
);

CREATE OR REPLACE TYPE T_DESEMPENIO_DMD_TABLE AS TABLE OF T_DESEMPENIO_DMD_ROW;

CREATE OR REPLACE FUNCTION FN_DESEMPENIO_DMD_SELECT(pID_JUGADOR DESEMPENIO_DMD.ID_JUGADOR%TYPE) RETURN  T_DESEMPENIO_DMD_TABLE PIPELINED AS
  CURSOR cDESEMPENIO_DMD IS
  SELECT *
  FROM DESEMPENIO_DMD
  WHERE ID_JUGADOR LIKE pID_JUGADOR;  
BEGIN
  FOR reg in cDESEMPENIO_DMD LOOP
    PIPE ROW(T_DESEMPENIO_DMD_ROW(reg.ID_JUGADOR,reg.ID_RESULTADO,reg.VELOCIDAD,reg.CAPACIDAD_PASE,reg.CAPACIDAD_MARCA,reg.TIRO_GOL));
  END LOOP;
  RETURN;
END;

---------------------------------------------------------
CREATE TYPE T_DESEMPENIO_PORTERO_ROW AS OBJECT
(
  ID_JUGADOR INTEGER,
  ID_RESULTADO INTEGER,
  CAPACIDAD_ATAJAR INTEGER,
  LUCHA1_1 INTEGER,
  ANTICIPACION INTEGER,
  REFLEJOS INTEGER
);

CREATE OR REPLACE TYPE T_DESEMPENIO_PORTERO_TABLE AS TABLE OF T_DESEMPENIO_PORTERO_ROW;

CREATE OR REPLACE FUNCTION FN_DESEMPENIO_PORTERO_SELECT(pID_JUGADOR DESEMPENIO_PORTERO.ID_JUGADOR%TYPE) RETURN  T_DESEMPENIO_PORTERO_TABLE PIPELINED AS
  CURSOR cDESEMPENIO_PORTERO IS
  SELECT *
  FROM DESEMPENIO_PORTERO
  WHERE ID_JUGADOR LIKE pID_JUGADOR;  
BEGIN
  FOR reg in cDESEMPENIO_PORTERO LOOP
    PIPE ROW(T_DESEMPENIO_PORTERO_ROW(reg.ID_JUGADOR,reg.ID_RESULTADO,reg.CAPACIDAD_ATAJAR,reg.LUCHA1_1,reg.ANTICIPACION,reg.REFLEJOS));
  END LOOP;
  RETURN;
END;

---------------------------------------------------------
CREATE TYPE T_ENTRENADOR_ROW AS OBJECT
(
  ID_ENTRENADOR INTEGER,
  ID_PAIS INTEGER,
  NOMBRE VARCHAR2(100),
  EDAD INTEGER,
  CEDULA_IDENTIDAD INTEGER,
  BIOGRAFIA CLOB,
  FOTO BLOB
);

CREATE OR REPLACE TYPE T_ENTRENADOR_TABLE AS TABLE OF T_ENTRENADOR_ROW;

CREATE OR REPLACE FUNCTION FN_ENTRENADOR_SELECT(pNOMBRE ENTRENADOR.NOMBRE%TYPE) RETURN  T_ENTRENADOR_TABLE PIPELINED AS
  CURSOR cENTRENADOR IS
  SELECT *
  FROM ENTRENADOR
  WHERE NOMBRE LIKE pNOMBRE;  
BEGIN
  FOR reg in cENTRENADOR LOOP
    PIPE ROW(T_ENTRENADOR_ROW(reg.ID_ENTRENADOR,reg.ID_PAIS,reg.NOMBRE,reg.EDAD,reg.CEDULA_IDENTIDAD,reg.BIOGRAFIA,reg.FOTO));
  END LOOP;
  RETURN;
END;

---------------------------------------------------------
CREATE TYPE T_EQUIPO_ROW AS OBJECT
(
  ID_EQUIPO INTEGER,
  ID_CIUDAD INTEGER,
  ID_ENTRENADOR INTEGER,
  NOMBRE VARCHAR2(100),
  FECHA_FUNDACION DATE,
  NUMERO_COPASGANADAS INTEGER,
  LOGOTIPO BLOB,
  TIPO VARCHAR2(20)
);

CREATE OR REPLACE TYPE T_EQUIPO_TABLE AS TABLE OF T_EQUIPO_ROW;

CREATE OR REPLACE FUNCTION FN_EQUIPO_SELECT(pNOMBRE EQUIPO.NOMBRE%TYPE) RETURN  T_EQUIPO_TABLE PIPELINED AS
  CURSOR cEQUIPO IS
  SELECT *
  FROM EQUIPO
  WHERE NOMBRE LIKE pNOMBRE;  
BEGIN
  FOR reg in cEQUIPO LOOP
    PIPE ROW(T_EQUIPO_ROW(reg.ID_EQUIPO,reg.ID_CIUDAD,reg.ID_ENTRENADOR,reg.NOMBRE,reg.FECHA_FUNDACION,reg.NUMERO_COPASGANADAS,reg.LOGOTIPO,reg.TIPO));
  END LOOP;
  RETURN;
END;

---------------------------------------------------------
CREATE TYPE T_ESTADIO_ROW AS OBJECT
(
  ID_ESTADIO INTEGER,
  ID_CIUDAD INTEGER,
  NOMBRE VARCHAR2(100),
  CAPACIDAD INTEGER,
  FECHA_INAUGURACION DATE,
  HISTORIA CLOB
);

CREATE OR REPLACE TYPE T_ESTADIO_TABLE AS TABLE OF T_ESTADIO_ROW;

CREATE OR REPLACE FUNCTION FN_ESTADIO_SELECT(pNOMBRE ESTADIO.NOMBRE%TYPE) RETURN  T_ESTADIO_TABLE PIPELINED AS
  CURSOR cESTADIO IS
  SELECT *
  FROM ESTADIO
  WHERE NOMBRE LIKE pNOMBRE;  
BEGIN
  FOR reg in cESTADIO LOOP
    PIPE ROW(T_ESTADIO_ROW(reg.ID_ESTADIO,reg.ID_CIUDAD,reg.NOMBRE,reg.CAPACIDAD,reg.FECHA_INAUGURACION,reg.HISTORIA));
  END LOOP;
  RETURN;
END;

---------------------------------------------------------
CREATE TYPE T_JUGADOR_ROW AS OBJECT
(
  ID_JUGADOR INTEGER,
  ID_PAIS INTEGER,
  CEDULA_IDENTIDAD INTEGER,
  NOMBRE VARCHAR2(100),
  EDAD INTEGER,
  PERO NUMBER,
  POSICION VARCHAR2(25),
  BIOGRAFIA CLOB,
  FOTO BLOB
);

CREATE OR REPLACE TYPE T_JUGADOR_TABLE AS TABLE OF T_JUGADOR_ROW;

CREATE OR REPLACE FUNCTION FN_JUGADOR_SELECT(pNOMBRE JUGADOR.NOMBRE%TYPE) RETURN  T_JUGADOR_TABLE PIPELINED AS
  CURSOR cJUGADOR IS
  SELECT *
  FROM JUGADOR
  WHERE NOMBRE LIKE pNOMBRE;  
BEGIN
  FOR reg in cJUGADOR LOOP
    PIPE ROW(T_JUGADOR_ROW(reg.ID_JUGADOR,reg.ID_PAIS,reg.CEDULA_IDENTIDAD,reg.NOMBRE,reg.EDAD,reg.PESO,reg.POSICION,reg.BIOGRAFIA,reg.FOTO));
  END LOOP;
  RETURN;
END;

---------------------------------------------------------
CREATE TYPE T_PARTIDO_ROW AS OBJECT
(
  ID_PARTIDO INTEGER,
  ID_COMPETENCIA INTEGER,
  ID_ESTADIO INTEGER,
  ID_EQUIPO_LOCAL INTEGER,
  ID_EQUIPO_VISITA INTEGER,
  FECHA_PARTIDO DATE,
  HORA_INICIO NUMBER,
  ESTADO INTEGER
);

CREATE OR REPLACE TYPE T_PARTIDO_TABLE AS TABLE OF T_PARTIDO_ROW;

CREATE OR REPLACE FUNCTION FN_PARTIDO_SELECT(pID_EQUIPO_LOCAL PARTIDO.ID_EQUIPO_LOCAL%TYPE) RETURN  T_PARTIDO_TABLE PIPELINED AS
  CURSOR cPARTIDO IS
  SELECT *
  FROM PARTIDO
  WHERE ID_EQUIPO_LOCAL LIKE pID_EQUIPO_LOCAL;  
BEGIN
  FOR reg in cPARTIDO LOOP
    PIPE ROW(T_PARTIDO_ROW(reg.ID_PARTIDO,reg.ID_COMPETENCIA,reg.ID_ESTADIO,reg.ID_EQUIPO_LOCAL,reg.ID_EQUIPO_VISITA,reg.FECHA_PARTIDO,reg.HORA_INICIO,reg.ESTADO));
  END LOOP;
  RETURN;
END;

---------------------------------------------------------
CREATE TYPE T_RESULTADO_ROW AS OBJECT
(
  ID_RESULTADO INTEGER, 
  ID_PARTIDO INTEGER, 
  PRIMERT_GOLES_EQUIPO1 INTEGER, 
  PRIMERT_GOLES_EQUIPO2 INTEGER, 
  SEGUNDOT_GOLES_EQUIPO1 INTEGER, 
  SEGUNDOT_GOLES_EQUIPO2 INTEGER, 
  TIEMPOEXTRA_GOLES_EQUIPO1 INTEGER, 
  TIEMPOEXTRA_GOLES_EQUIPO2 INTEGER, 
  PENALES_GOLES_EQUIPO1 INTEGER, 
  PENALES_GOLES_EQUIPO2 INTEGER, 
  TARJETAS_A_EQUIPO1 INTEGER, 
  TARJETAS_A_EQUIPO2 INTEGER, 
  TARJETAS_R_EQUIPO1 INTEGER, 
  TARJETAS_R_EQUIPO2 INTEGER,
  
  --- AQUI SE AGREGAN LOS TRES CAMPOS CALCULADOS
  RESULTADO_FINAL_EQUIPO1 INTEGER,
  RESULTADO_FINAL_EQUIPO2 INTEGER,
  EQUIPO_GANADOR VARCHAR2(100)
);

CREATE OR REPLACE TYPE T_RESULTADO_TABLE AS TABLE OF T_RESULTADO_ROW;

CREATE OR REPLACE FUNCTION FN_RESULTADO_SELECT(pID_PARTIDO RESULTADO.ID_PARTIDO%TYPE) RETURN  T_RESULTADO_TABLE PIPELINED AS
  CURSOR cRESULTADO IS
  SELECT *
  FROM RESULTADO
  WHERE ID_PARTIDO LIKE pID_PARTIDO; 
  nRESULTADO_EQUIPO1 INTEGER;
  nRESULTADO_EQUIPO2 INTEGER;
  nEQUIPO_GANADOR VARCHAR2(100);
BEGIN
  FOR reg in cRESULTADO LOOP
    nRESULTADO_EQUIPO1 := (NVL(reg.PRIMERT_GOLES_EQUIPO1,0)+NVL(reg.SEGUNDOT_GOLES_EQUIPO1,0)+NVL(reg.TIEMPOEXTRA_GOLES_EQUIPO1,0)+
                          NVL(reg.PENALES_GOLES_EQUIPO1,0));
    nRESULTADO_EQUIPO2 := (NVL(reg.PRIMERT_GOLES_EQUIPO2,0)+NVL(reg.SEGUNDOT_GOLES_EQUIPO2,0)+NVL(reg.TIEMPOEXTRA_GOLES_EQUIPO2,0)+
                          NVL(reg.PENALES_GOLES_EQUIPO2,0)); 
    IF nRESULTADO_EQUIPO1 > nRESULTADO_EQUIPO2 THEN
      SELECT FN_GET_EQUIPO_GANADOR(1,pID_PARTIDO)INTO nEQUIPO_GANADOR FROM DUAL;
    ELSE IF nRESULTADO_EQUIPO2 > nRESULTADO_EQUIPO1 THEN
      SELECT FN_GET_EQUIPO_GANADOR(2,pID_PARTIDO) INTO nEQUIPO_GANADOR FROM DUAL;
    ELSE
      nEQUIPO_GANADOR := 'EMPATE';
    END IF;
    END IF;
    PIPE ROW(T_RESULTADO_ROW( reg.ID_RESULTADO, reg.ID_PARTIDO, reg.PRIMERT_GOLES_EQUIPO1, reg.PRIMERT_GOLES_EQUIPO2, reg.SEGUNDOT_GOLES_EQUIPO1,
                              reg.SEGUNDOT_GOLES_EQUIPO2, reg.TIEMPOEXTRA_GOLES_EQUIPO1, reg.TIEMPOEXTRA_GOLES_EQUIPO2, reg.PENALES_GOLES_EQUIPO1,
                              reg.PENALES_GOLES_EQUIPO2, reg.TARJETAS_A_EQUIPO1, reg.TARJETAS_A_EQUIPO2, reg.TARJETAS_R_EQUIPO1, reg.TARJETAS_R_EQUIPO2,
                              nRESULTADO_EQUIPO1, nRESULTADO_EQUIPO2, nEQUIPO_GANADOR));
  END LOOP;
  RETURN;
END;

--- **** FUNCION AUXILIAR PARA OBTENER EL NOMBRE DE UN EQUIPO, QUE SEGUN EL RESULTADO FINAL DEL PARTIDO DETERMINE SI ES GANADOR
CREATE OR REPLACE FUNCTION FN_GET_EQUIPO_GANADOR(pEQUIPO INTEGER, pID_PARTIDO INTEGER) RETURN VARCHAR2 AS
vNOMBRE VARCHAR2(100);
BEGIN
  IF pEQUIPO = 1 THEN
    SELECT NOMBRE INTO vNOMBRE FROM EQUIPO, 
    (SELECT PARTIDO.ID_EQUIPO_LOCAL, PARTIDO.ID_EQUIPO_VISITA FROM PARTIDO, RESULTADO
    WHERE PARTIDO.ID_PARTIDO = RESULTADO.ID_PARTIDO AND PARTIDO.ID_PARTIDO = pID_PARTIDO)S
    WHERE S.ID_EQUIPO_LOCAL = EQUIPO.ID_EQUIPO;
  ELSE IF pEQUIPO = 2 THEN
    SELECT NOMBRE INTO vNOMBRE FROM EQUIPO, 
    (SELECT PARTIDO.ID_EQUIPO_LOCAL, PARTIDO.ID_EQUIPO_VISITA FROM PARTIDO, RESULTADO
    WHERE PARTIDO.ID_PARTIDO = RESULTADO.ID_PARTIDO AND PARTIDO.ID_PARTIDO = pID_PARTIDO)S
    WHERE S.ID_EQUIPO_VISITA = EQUIPO.ID_EQUIPO;
  END IF;
  END IF;
  RETURN vNOMBRE;
END;
--- PRUEBA DE LA FUNCION SELECT DE RESULTADO CON LA INFO DE LOS CAMPOS CALCULADOS
SELECT * FROM TABLE(FN_RESULTADO_SELECT(4));


--- FUNCIONS PARA EL PRIMER REPORTE: PARTIDOS DE LAS COMPETENCIAS
CREATE TYPE T_PARTIDOS_COMPETENCIA_ROW AS OBJECT
(
  NOMBRE_COMPETENCIA VARCHAR2(100),
  EQUIPO_LOCAL VARCHAR2(100),
  EQUIPO_VISITA VARCHAR2(100),
  ESTADIO VARCHAR2(100),
  FECHA_PARTIDO DATE,
  HORA_INICIO NUMBER,
  ESTADO VARCHAR2(25)
);

CREATE OR REPLACE TYPE T_PARTIDO_COMPETENCIAS_TABLE AS TABLE OF T_PARTIDOS_COMPETENCIA_ROW;

CREATE OR REPLACE FUNCTION FN_PARTIDO_COMPETENCIAS_SELECT(pID_COMPETENCIA PARTIDO.ID_COMPETENCIA%TYPE) RETURN  T_PARTIDO_COMPETENCIAS_TABLE PIPELINED AS
  CURSOR cPARTIDO IS
  SELECT *
  FROM PARTIDO
  WHERE ID_COMPETENCIA LIKE pID_COMPETENCIA;
  vNOMBRE_COMPETENCIA VARCHAR2(100);
  vEQUIPO_LOCAL VARCHAR2(100);
  vEQUIPO_VISITA VARCHAR2(100);
  vESTADIO VARCHAR2(100);
BEGIN
  FOR reg in cPARTIDO LOOP
    
    SELECT NOMBRE INTO vNOMBRE_COMPETENCIA FROM COMPETENCIA, PARTIDO
    WHERE COMPETENCIA.ID_COMPETENCIA = PARTIDO.ID_COMPETENCIA AND COMPETENCIA.ID_COMPETENCIA = pID_COMPETENCIA AND PARTIDO.ID_PARTIDO = reg.ID_PARTIDO;
    
    SELECT NOMBRE INTO vEQUIPO_LOCAL FROM EQUIPO, PARTIDO
    WHERE EQUIPO.ID_EQUIPO = PARTIDO.ID_EQUIPO_LOCAL AND PARTIDO.ID_COMPETENCIA = pID_COMPETENCIA AND PARTIDO.ID_PARTIDO = reg.ID_PARTIDO;
    
    SELECT NOMBRE INTO vEQUIPO_VISITA FROM EQUIPO, PARTIDO
    WHERE EQUIPO.ID_EQUIPO = PARTIDO.ID_EQUIPO_VISITA AND PARTIDO.ID_COMPETENCIA = pID_COMPETENCIA AND PARTIDO.ID_PARTIDO = reg.ID_PARTIDO;
    
    SELECT NOMBRE INTO vESTADIO FROM ESTADIO, PARTIDO
    WHERE ESTADIO.ID_ESTADIO = PARTIDO.ID_ESTADIO AND PARTIDO.ID_COMPETENCIA = pID_COMPETENCIA AND PARTIDO.ID_PARTIDO = reg.ID_PARTIDO;
    
    PIPE ROW(T_PARTIDOS_COMPETENCIA_ROW(vNOMBRE_COMPETENCIA,vEQUIPO_LOCAL,vEQUIPO_VISITA,vESTADIO,reg.FECHA_PARTIDO,reg.HORA_INICIO,reg.ESTADO));
  END LOOP;
  RETURN;
END;

CREATE OR REPLACE FUNCTION FN_PARTIDO_ALLCOMPETE_SELECT RETURN T_PARTIDO_COMPETENCIAS_TABLE PIPELINED AS
  CURSOR cPARTIDO IS
  SELECT * FROM PARTIDO;
  vNOMBRE_COMPETENCIA VARCHAR2(100);
  vEQUIPO_LOCAL VARCHAR2(100);
  vEQUIPO_VISITA VARCHAR2(100);
  vESTADIO VARCHAR2(100);
BEGIN
  FOR reg in cPARTIDO LOOP
    
    SELECT NOMBRE INTO vNOMBRE_COMPETENCIA FROM COMPETENCIA, PARTIDO
    WHERE COMPETENCIA.ID_COMPETENCIA = PARTIDO.ID_COMPETENCIA AND PARTIDO.ID_PARTIDO = reg.ID_PARTIDO;
    
    SELECT NOMBRE INTO vEQUIPO_LOCAL FROM EQUIPO, PARTIDO
    WHERE EQUIPO.ID_EQUIPO = PARTIDO.ID_EQUIPO_LOCAL AND PARTIDO.ID_PARTIDO = reg.ID_PARTIDO;
    
    SELECT NOMBRE INTO vEQUIPO_VISITA FROM EQUIPO, PARTIDO
    WHERE EQUIPO.ID_EQUIPO = PARTIDO.ID_EQUIPO_VISITA AND PARTIDO.ID_PARTIDO = reg.ID_PARTIDO;
    
    SELECT NOMBRE INTO vESTADIO FROM ESTADIO, PARTIDO
    WHERE ESTADIO.ID_ESTADIO = PARTIDO.ID_ESTADIO AND PARTIDO.ID_PARTIDO = reg.ID_PARTIDO;
    
    PIPE ROW(T_PARTIDOS_COMPETENCIA_ROW(vNOMBRE_COMPETENCIA,vEQUIPO_LOCAL,vEQUIPO_VISITA,vESTADIO,reg.FECHA_PARTIDO,reg.HORA_INICIO,reg.ESTADO));
  END LOOP;
  RETURN;
END;

--- PRUEBA DE LA FUNCION QUE DEVUELVE EL PRIMER REPORTE
SELECT * FROM TABLE(FN_PARTIDO_COMPETENCIAS_SELECT(1));
SELECT * FROM TABLE(FN_PARTIDO_ALLCOMPETE_SELECT());

--- FUNCION PARA EL SEGUNDO REPORTE
CREATE TYPE T_EQUIPOS_COMPETENCIA_ROW AS OBJECT
(
  NOMBRE_COMPETENCIA VARCHAR2(100),
  NOMBRE_EQUIPO VARCHAR2(100)
);

CREATE OR REPLACE TYPE T_EQUIPOS_COMPETENCIAS_TABLE AS TABLE OF T_EQUIPOS_COMPETENCIA_ROW;

CREATE OR REPLACE FUNCTION FN_GET_EQUIPOS_COMPETENCIAS(pID_COMPETENCIA COMPETENCIA.ID_COMPETENCIA%TYPE)RETURN  T_EQUIPOS_COMPETENCIAS_TABLE PIPELINED AS
CURSOR cEQUIPOS IS
SELECT ID_EQUIPO, ID_COMPETENCIA FROM EQUIPO_COMPETENCIA
WHERE ID_COMPETENCIA = pID_COMPETENCIA;
vNOMBRE_COMPETENCIA VARCHAR2(100);
vNOMBRE_EQUIPO VARCHAR2(100);
BEGIN
  SELECT NOMBRE INTO vNOMBRE_COMPETENCIA FROM COMPETENCIA
  WHERE COMPETENCIA.ID_COMPETENCIA = pID_COMPETENCIA;
  FOR reg in cEQUIPOS LOOP
    
    SELECT NOMBRE INTO vNOMBRE_EQUIPO FROM EQUIPO
    INNER JOIN EQUIPO_COMPETENCIA
    ON EQUIPO.ID_EQUIPO = EQUIPO_COMPETENCIA.ID_EQUIPO
    WHERE EQUIPO_COMPETENCIA.ID_COMPETENCIA = pID_COMPETENCIA AND EQUIPO.ID_EQUIPO = reg.ID_EQUIPO;
    
    PIPE ROW(T_EQUIPOS_COMPETENCIA_ROW(vNOMBRE_COMPETENCIA,vNOMBRE_EQUIPO));   
  END LOOP;
  RETURN;
END;

CREATE OR REPLACE FUNCTION FN_GETALL_EQUIPOS_COMPETENCIAS RETURN  T_EQUIPOS_COMPETENCIAS_TABLE PIPELINED AS
CURSOR cEQUIPOS IS
SELECT ID_EQUIPO, ID_COMPETENCIA FROM EQUIPO_COMPETENCIA;
vNOMBRE_COMPETENCIA VARCHAR2(100);
vNOMBRE_EQUIPO VARCHAR2(100);
BEGIN
  FOR reg in cEQUIPOS LOOP
    
    SELECT NOMBRE INTO vNOMBRE_COMPETENCIA FROM COMPETENCIA
    WHERE COMPETENCIA.ID_COMPETENCIA = reg.ID_COMPETENCIA;
    
    SELECT NOMBRE INTO vNOMBRE_EQUIPO FROM EQUIPO
    WHERE EQUIPO.ID_EQUIPO = reg.ID_EQUIPO;
    
    PIPE ROW(T_EQUIPOS_COMPETENCIA_ROW(vNOMBRE_COMPETENCIA,vNOMBRE_EQUIPO));   
  END LOOP;
  RETURN;
END;

--- PRUEBAS DE LAS FUNCIONES PARA EL SEGUNDO REPORTE
SELECT * FROM TABLE(FN_GET_EQUIPOS_COMPETENCIAS(1));
SELECT * FROM TABLE(FN_GETALL_EQUIPOS_COMPETENCIAS());


-- FUNCION PARA EL TERCER REPORTE
CREATE TYPE T_COMP_RESULTADO_ROW AS OBJECT
(
  JORNADA INTEGER, 
  EQUIPO VARCHAR2(100),
  GOLES_PRIMER_TIEMPO INTEGER,
  GOLES_SEGUNDO_TIEMPO INTEGER, 
  GOLES_TIEMPO_EXTRA INTEGER,
  GOLES_PENALES INTEGER, 
  RESULTADO_FINAL INTEGER
);

CREATE OR REPLACE TYPE T_COMP_RESULTADO_TABLE AS TABLE OF T_COMP_RESULTADO_ROW;

CREATE OR REPLACE FUNCTION FN_COMP_RESULTADO_SELECT(pID_COMPETENCIA COMPETENCIA.ID_COMPETENCIA%TYPE) RETURN T_COMP_RESULTADO_TABLE PIPELINED AS
  CURSOR cRESULTADO IS
  SELECT RESULTADO.ID_PARTIDO FROM RESULTADO
  INNER JOIN PARTIDO ON
  RESULTADO.ID_PARTIDO = PARTIDO.ID_PARTIDO
  WHERE PARTIDO.ID_COMPETENCIA = 1;
  vNOMBRE_EQUIPO1 VARCHAR2(100);
  vNOMBRE_EQUIPO2 VARCHAR2(100);
  vPRIMERT_GOLES_EQUIPO1 INTEGER;
  vSEGUNDOT_GOLES_EQUIPO1 INTEGER; 
  vTIEMPOEXTRA_GOLES_EQUIPO1 INTEGER;
  vPENALES_GOLES_EQUIPO1 INTEGER;
  vRESULTADO_FINAL_EQUIPO1 INTEGER;
  vPRIMERT_GOLES_EQUIPO2 INTEGER;
  vSEGUNDOT_GOLES_EQUIPO2 INTEGER; 
  vTIEMPOEXTRA_GOLES_EQUIPO2 INTEGER;
  vPENALES_GOLES_EQUIPO2 INTEGER;
  vRESULTADO_FINAL_EQUIPO2 INTEGER;
BEGIN
  FOR reg in cRESULTADO LOOP
    
    SELECT PRIMERT_GOLES_EQUIPO1 INTO vPRIMERT_GOLES_EQUIPO1 FROM TABLE(FN_RESULTADO_SELECT(reg.ID_PARTIDO));
    SELECT SEGUNDOT_GOLES_EQUIPO1 INTO vSEGUNDOT_GOLES_EQUIPO1 FROM TABLE(FN_RESULTADO_SELECT(reg.ID_PARTIDO));
    SELECT TIEMPOEXTRA_GOLES_EQUIPO1 INTO vTIEMPOEXTRA_GOLES_EQUIPO1 FROM TABLE(FN_RESULTADO_SELECT(reg.ID_PARTIDO));
    SELECT PENALES_GOLES_EQUIPO1 INTO vPENALES_GOLES_EQUIPO1 FROM TABLE(FN_RESULTADO_SELECT(reg.ID_PARTIDO));
    SELECT RESULTADO_FINAL_EQUIPO1 INTO vRESULTADO_FINAL_EQUIPO1 FROM TABLE(FN_RESULTADO_SELECT(reg.ID_PARTIDO));
    SELECT PRIMERT_GOLES_EQUIPO2 INTO vPRIMERT_GOLES_EQUIPO2 FROM TABLE(FN_RESULTADO_SELECT(reg.ID_PARTIDO));
    SELECT SEGUNDOT_GOLES_EQUIPO2 INTO vSEGUNDOT_GOLES_EQUIPO2 FROM TABLE(FN_RESULTADO_SELECT(reg.ID_PARTIDO));
    SELECT TIEMPOEXTRA_GOLES_EQUIPO2 INTO vTIEMPOEXTRA_GOLES_EQUIPO2 FROM TABLE(FN_RESULTADO_SELECT(reg.ID_PARTIDO));
    SELECT PENALES_GOLES_EQUIPO2 INTO vPENALES_GOLES_EQUIPO2 FROM TABLE(FN_RESULTADO_SELECT(reg.ID_PARTIDO));
    SELECT RESULTADO_FINAL_EQUIPO2 INTO vRESULTADO_FINAL_EQUIPO2 FROM TABLE(FN_RESULTADO_SELECT(reg.ID_PARTIDO));
    
    SELECT FN_GET_EQUIPO_GANADOR(1,reg.ID_PARTIDO) INTO vNOMBRE_EQUIPO1 FROM DUAL;
    SELECT FN_GET_EQUIPO_GANADOR(2,reg.ID_PARTIDO) INTO vNOMBRE_EQUIPO2 FROM DUAL;
    PIPE ROW( T_COMP_RESULTADO_ROW(reg.ID_PARTIDO,vNOMBRE_EQUIPO1,vPRIMERT_GOLES_EQUIPO1,
              vSEGUNDOT_GOLES_EQUIPO1,vTIEMPOEXTRA_GOLES_EQUIPO1,vPENALES_GOLES_EQUIPO1,vRESULTADO_FINAL_EQUIPO1));
    PIPE ROW( T_COMP_RESULTADO_ROW(reg.ID_PARTIDO,vNOMBRE_EQUIPO2,vPRIMERT_GOLES_EQUIPO2,
              vSEGUNDOT_GOLES_EQUIPO2,vTIEMPOEXTRA_GOLES_EQUIPO2,vPENALES_GOLES_EQUIPO2,vRESULTADO_FINAL_EQUIPO2));
  END LOOP;
  RETURN;
END;

--- PRUEBA DE LA FUNCION PARA EL REPORTE 3
SELECT * FROM TABLE(FN_COMP_RESULTADO_SELECT(1));

